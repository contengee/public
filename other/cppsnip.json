{
	"bits":{
		"prefix":"bits",
		"body":[
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"int main () {",
			"\t$1",
			"}"
		]
	},
	"cout":{
		"prefix": "cout",
		"body": "cout << $1 << endl;"
	},
	"comment":{
		"prefix": "comment",
		"body": [
			"/*",
			"",
			"*/"
		]
	},
	"int": {
		"prefix": "int",
		"body": [
			"int n;cin >> n;"
		],
		"description": "<Snipet description>"
	},
	"int2": {
		"prefix": "int2",
		"body": [
			"int n,m;cin >> n >> m;"
		]
	},
	"string":{
		"prefix": "str",
		"body": [
			"string s;cin >> s"
		]
	},
	"if":{
		"prefix": "if",
		"body": [
			"if ($1) {",
			"\t",
			"}"
		]
	},
	"elseif":{
		"prefix": "elseif",
		"body": [
			"else if ($1) {",
			"\t",
			"}"
		]
	},
	"else":{
		"prefix": "else",
		"body": [
			"else {",
			"\t",
			"}"
		]
	},
	"while":{
		"prefix": "while",
		"body": [
			"while (${1:True}) {",
			"\t",
			"}"
		]
	},
	"for":{
		"prefix": "for",
		"body": [
			"for (int i = ${1:0}; i < n; i++) {",
			"\t",
			"}"
		]
	},
	"forfor":{
		"prefix": "forfor",
		"body": [
			"for (int i = ${1:0}; i < ${2:n}; i++) {",
			"\tfor (int j = ${3:0}; j < ${4:m}; j++) {",
			"\t\t",
			"\t}",
			"}"
		]
	},
	"vec":{
		"prefix": "vec",
		"body": [
			"vector<int> v($1,0);"
		]
	},
	"vecvec":{
		"prefix": "vecvec",
		"body": [
			"vector<vector<int>> v($1,vector<int>($2,$3));"
		]
	},
	"vecvecvec":{
		"prefix": "vecvecvec",
		"body": [
			"vector<vector<vector<int>>> v($1,vector<vector<int>>($2,vector<int>($3,$4)));"
		]
	},
	"gcd":{
		"prefix": "gcd",
		"body": [
			"int gcd_core(int a, int b) {",
			"\tif (b == 0) return a;",
			"\telse return gcd_core(b, a % b);}"]
	},
	"wasni": {
		"prefix": "wasni",
		"body": "#include<deque>\r\n#include<queue>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<iostream>\r\n#include<set>\r\n#include<cmath>\r\n#include<tuple>\r\n#include<string>\r\n#include<chrono>\r\n#include<functional>\r\n#include<iterator>\r\n#include<random>\r\n#include<unordered_set>\r\n#include<array>\r\n#include<map>\r\n#include<iomanip>\r\n#include<assert.h>\r\n#include<list>\r\n#include<bitset>\r\n#include<stack>\r\n#include<memory>\r\n#include<numeric>\r\nusing namespace std;\r\nusing namespace std::chrono;\r\ntypedef long long int llint;\r\ntypedef long double lldo;\r\n#define mp make_pair\r\n#define mt make_tuple\r\n#define pub push_back\r\n#define puf push_front\r\n#define pob pop_back\r\n#define pof pop_front\r\n#define fir first\r\n#define sec second\r\n#define res resize\r\n#define ins insert\r\n#define era erase\r\n#define REP(i, n) for(int i = 0;i < (n);i++)\r\n/*cout<<fixed<<setprecision(20);cin.tie(0);ios::sync_with_stdio(false);*/\r\nconst llint mod=1000000007;\r\nconst llint inf=2.19e15+1;\r\nconst long double pai=3.141592653589793238462643383279502884197;\r\nconst long double eps=1e-10;\r\ntemplate <class T,class U>bool chmin(T& a,U b){if(a>b){a=b;return true;}return false;}\r\ntemplate <class T,class U>bool chmax(T& a,U b){if(a<b){a=b;return true;}return false;}\r\nllint gcd(llint a,llint b){if(a%b==0){return b;}else return gcd(b,a%b);}\r\nllint lcm(llint a,llint b){if(a==0){return b;}return a/gcd(a,b)*b;}\r\ntemplate<class T> void SO(T& ve){sort(ve.begin(),ve.end());}\r\ntemplate<class T> void REV(T& ve){reverse(ve.begin(),ve.end());}\r\ntemplate<class T>llint LBI(const vector<T>&ar,T in){return lower_bound(ar.begin(),ar.end(),in)-ar.begin();}\r\ntemplate<class T>llint UBI(const vector<T>&ar,T in){return upper_bound(ar.begin(),ar.end(),in)-ar.begin();}\r\n \r\nint main(void){\r\n    cin.tie(0);ios::sync_with_stdio(false);\r\n    $1\r\n    return 0;\r\n}\r\n/*\r\ng++ test.cpp\r\n./a.out\r\n\r\n*/",
		"description": ""
	}
}